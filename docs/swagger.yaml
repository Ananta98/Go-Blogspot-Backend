definitions:
  controllers.CategoryInput:
    properties:
      name:
        type: string
    type: object
  controllers.LoginInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  controllers.PostInput:
    properties:
      article_content:
        type: string
      article_description:
        type: string
      article_title:
        type: string
      category_id:
        type: integer
    required:
    - article_content
    - article_description
    - article_title
    - category_id
    type: object
  controllers.RegisterInput:
    properties:
      email:
        type: string
      image_url:
        type: string
      name:
        type: string
      password:
        type: string
      role:
        type: integer
      username:
        type: string
    required:
    - email
    - name
    - password
    - role
    - username
    type: object
  controllers.UpdatePasswordInput:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    required:
    - new_password
    - old_password
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      description: login into blog to get access all blog list and CRUD blogs
      parameters:
      - description: json body to Login existing user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Login using registered user.
      tags:
      - Auth
  /auth/register:
    post:
      description: registering a user to get access blog.
      parameters:
      - description: json body to register a user or create new user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Register new user or create new user.
      tags:
      - Auth
  /category:
    get:
      description: Get all categories.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get all Category list.
      tags:
      - Category
    post:
      description: create new category for post.
      parameters:
      - description: json body to create new category
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CategoryInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Create Category
      tags:
      - Category
  /category/{id}:
    delete:
      description: Delete existing category by id.
      parameters:
      - description: Category id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Delete existing category.
      tags:
      - Category
    patch:
      description: Update existing category based on category id.
      parameters:
      - description: Category id
        in: path
        name: id
        required: true
        type: string
      - description: the body to update existing category
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CategoryInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Update Category.
      tags:
      - Category
  /login/update-current-user:
    patch:
      description: Update current user without update password that have logged in
        into blog.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Update current user.
      tags:
      - User
  /login/update-password:
    patch:
      description: Ability user to change their password.
      parameters:
      - description: json body to update password for current existing user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdatePasswordInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Update password for current user.
      tags:
      - Auth
  /post:
    post:
      description: create new blog post.
      parameters:
      - description: json body to create new blog post
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.PostInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Create Blog Post
      tags:
      - Post
  /user:
    get:
      description: Get all users that have been registered except current user.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: current_page
        in: query
        name: current_page
        type: integer
      - description: page_size
        in: query
        name: page_size
        type: integer
      - description: input_search
        in: query
        name: input_search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get all User list.
      tags:
      - User
  /user/{id}:
    get:
      description: login into blog to get all user detail
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get current user detail that have login
      tags:
      - User
swagger: "2.0"
