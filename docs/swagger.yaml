definitions:
  controllers.CategoryInput:
    properties:
      name:
        type: string
    type: object
  controllers.InputComment:
    properties:
      comment_content:
        type: string
      post_id:
        type: integer
    required:
    - comment_content
    - post_id
    type: object
  controllers.LoginInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  controllers.PostInput:
    properties:
      article_content:
        type: string
      article_description:
        type: string
      article_title:
        type: string
      category_id:
        type: integer
    required:
    - article_content
    - article_description
    - article_title
    - category_id
    type: object
  controllers.RegisterInput:
    properties:
      email:
        type: string
      image_url:
        type: string
      name:
        type: string
      password:
        type: string
      role:
        type: integer
      username:
        type: string
    required:
    - email
    - name
    - password
    - role
    - username
    type: object
  controllers.UpdateCommentInput:
    properties:
      comment_content:
        type: string
    required:
    - comment_content
    type: object
  controllers.UpdatePasswordInput:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    required:
    - new_password
    - old_password
    type: object
  controllers.UpdateUserInput:
    properties:
      email:
        type: string
      image_url:
        type: string
      name:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      description: login into blog to get access all blog list and CRUD blogs
      parameters:
      - description: json body to Login existing user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Login using registered user.
      tags:
      - Auth
  /auth/register:
    post:
      description: registering a user to get access blog.
      parameters:
      - description: json body to register a user or create new user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Register new user or create new user (role 1 for admin, role 2 for
        non admin).
      tags:
      - Auth
  /category:
    get:
      description: Get all categories.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: input text for search category
        in: query
        name: input_search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get all Category list.
      tags:
      - Category
    post:
      description: create new category for post.
      parameters:
      - description: json body to create new category
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CategoryInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Create Category
      tags:
      - Category
  /category/{id}:
    delete:
      description: Delete existing category by id.
      parameters:
      - description: Category id
        in: path
        name: id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Delete existing category.
      tags:
      - Category
    patch:
      description: Update existing category based on category id.
      parameters:
      - description: Category id
        in: path
        name: id
        required: true
        type: string
      - description: the body to update existing category
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CategoryInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Update Category.
      tags:
      - Category
  /login/update-current-user:
    patch:
      description: Update current user without update password that have logged in
        into blog.
      parameters:
      - description: json body to update user profile for current existing user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateUserInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Update current user.
      tags:
      - User
  /login/update-password:
    patch:
      description: Ability user to change their password.
      parameters:
      - description: json body to update password for current existing user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdatePasswordInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Update password for current user.
      tags:
      - Auth
  /post:
    get:
      description: Get all categories.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: input text for search blog
        in: query
        name: input_search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get all Blog Post list.
      tags:
      - Post
    post:
      description: create new blog post.
      parameters:
      - description: json body to create new blog post
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.PostInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Create Blog Post
      tags:
      - Post
  /post/{id}:
    delete:
      description: Delete existing blog post by id.
      parameters:
      - description: Post id
        in: path
        name: id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Delete existing blog post.
      tags:
      - Post
    get:
      description: Get post detail based on post id
      parameters:
      - description: Post id
        in: path
        name: id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get detail post by id
      tags:
      - Post
    patch:
      description: Update existing post without update password that have logged in
        into blog.
      parameters:
      - description: Post id
        in: path
        name: id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Update existing post.
      tags:
      - Post
  /post/{id}/comment/:
    get:
      description: Get all comments based on post id.
      parameters:
      - description: Post id
        in: path
        name: id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: input text for search comment
        in: query
        name: input_search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get all comments list.
      tags:
      - Comment
  /post/{id}/comment/{comment_id}:
    delete:
      description: Delete existing comment in blog post by post id.
      parameters:
      - description: Post id
        in: path
        name: id
        required: true
        type: string
      - description: Comment id
        in: path
        name: comment_id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Delete existing comment blog post.
      tags:
      - Comment
    patch:
      description: Update existing comment blog post based on comment id and post
        id.
      parameters:
      - description: Post id
        in: path
        name: id
        required: true
        type: string
      - description: Comment id
        in: path
        name: comment_id
        required: true
        type: string
      - description: json body to update existing comment in existing post
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateCommentInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Update existing comment.
      tags:
      - Comment
  /post/{id}/like/{status}:
    post:
      description: like existing post
      parameters:
      - description: Post id
        in: path
        name: id
        required: true
        type: string
      - description: status 0/1 (dislike or like)
        in: path
        name: status
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Like post
      tags:
      - Like
  /post/{id}/user-dislikes:
    get:
      description: Get all users who dislikes in blog post based on id.
      parameters:
      - description: Post id
        in: path
        name: id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get all User dislike blog.
      tags:
      - Like
  /post/{id}/user-likes:
    get:
      description: Get all users who likes comment in blog post based on id.
      parameters:
      - description: Post id
        in: path
        name: id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get all User like based on blog post id.
      tags:
      - Like
  /post/comment:
    post:
      description: create new comment blog post based on post id.
      parameters:
      - description: json body to create new comment post
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.InputComment'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Create Comment Blog Post from post id.
      tags:
      - Comment
  /post/comment/{id}/like/{status}:
    post:
      description: like comment in existing post.
      parameters:
      - description: Comment id
        in: path
        name: id
        required: true
        type: string
      - description: status 0/1 (dislike or like)
        in: path
        name: status
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Like comment
      tags:
      - Like
  /post/comment/{id}/user-dislikes:
    get:
      description: Get all users who dislikes comment in blog post based on id.
      parameters:
      - description: Comment id
        in: path
        name: id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get all User dislike comment blog.
      tags:
      - Like
  /post/comment/{id}/user-likes:
    get:
      description: Get all users who likes comment in blog post based on id.
      parameters:
      - description: Comment id
        in: path
        name: id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get all User likes based on comment blog post id.
      tags:
      - Like
  /user:
    get:
      description: Get all users that have been registered except current user.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: current page for pagination
        in: query
        name: current_page
        type: integer
      - description: page size for pagination
        in: query
        name: page_size
        type: integer
      - description: input text for search category
        in: query
        name: input_search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get all User list.
      tags:
      - User
  /user/{id}:
    delete:
      description: Delete existing user by id.
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Delete existing user.
      tags:
      - User
    get:
      description: login into blog to get current user profile
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get current user profile that have login
      tags:
      - User
swagger: "2.0"
